<!-- /templates/collection.liquid -->
{% comment %}

  For more information on collection tags:
    - http://docs.shopify.com/themes/liquid-variables/collection

{% endcomment %}


<!-- set # of products per page -->
{% paginate collection.products by 34 %}

{% comment %}
  Use .grid--rev so that the collection tags appear below the products on mobile
{% endcomment %}

<div>
  <style>
    .grid-uniform.collection-products {
    	display: block !important;
    }
    .star-0 {
    display: none;
    }

    .star-rating {
      font-size: 15px;
      text-align: center;
    }

    .halfStyle {
      position: relative;
      display: inline-block;
      width: 15px;
      overflow: hidden;
      white-space: pre;
      color: #ddc;
      text-align: center;
    }

    .dropdown-filter select {
      padding-top: 2px;
      padding-bottom: 2px;
    }

    #sort-by {
      border-top: none;
      border-left: none;
      border-right: none;
      border-radius: 0px;
    }
    select#sort-by:focus {
      outline: none;
    }
    #size-filter {
      padding-bottom: 5px;
      display: inline-block;
    }
    div.dropdown.dropdown-filter {
      display: inline-block;
      min-width: inherit;
      transform: none;
    }

    @media (max-width: 470px){
      div.dropdown.dropdown-filter {
        width: 49%;
      }
      div.dropdown.dropdown-filter select {
        display: block;
        margin: auto;
      }
    }
  </style>



  <h2 class="headline2">{{collection.title}}</h2>
  <div id="page-filters">

    {% assign namespace = 'F-'| append:{{collection.id}} %}
    <div style="display:none">{{namespace}}</div>
    {% assign filter = collection.metafields[namespace] %}

    <div id="filter-options" style="display:none" data-options="{{ filter.fits | append: "," | append: filter.colors }}"></div>
    <link rel="stylesheet" href="{{ 'ccf-dropdown.min.css' | asset_url }}">
    <div class="filter-and-tabs-header" style="position: relative;">

      {% include "ccf-head-filter-1"%}
      {% include "ccf-head-filter-2"%}

      <div class="ccf-filters header header-list size-by">
        <div class="list-title">
          <span class="dd-title">Shop by Size</span>
          <div class="selected-type">
            <span class="diselect">×</span>
            <span class="selected"></span>
          </div>
        </div>

        <ul class="dd dd-size">
          <li value="ccf-size-xs">XS</li>
          <li value="ccf-size-s">S</li>
          <li value="ccf-size-m">M</li>
          <li value="ccf-size-l">L</li>
          <li value="ccf-size-xl">XL</li>
        </ul>
      </div>

      <div class="ccf-filters header header-list sort-by">
        <div class="list-title">
          <span class="dd-title">Sort By</span>
          <div class="selected-type">
            <span class="diselect">×</span>
            <span class="selected"></span>
          </div>
        </div>

        <ul class="dd dd-sort">
          <li value="manual">Featured</li>
          <li value="created-ascending">Oldest to Newest</li>
          <li value="created-descending">Newest to Oldest</li>
          <li value="price-ascending">Price: Low to High</li>
          <li value="price-descending">Price: High to Low</li>
          <li value="best-selling">Best Selling</li>
        </ul>
      </div>
    </div>

    <div class="filter-and-tabs-container" >
      {% include "ccf-content-filter-1"%}
      {% include "ccf-content-filter-2"%}
      {{ 'hide-filters.js' | asset_url | script_tag }}
    </div>


  </div>

  <script src="{{ 'ccf-dropdown.js' | asset_url }}" async></script> <!-- Watch async -->
 <script src="https://shopify-ccf.herokuapp.com/public/size-handler.js" async type="text/javascript"></script>
  <script>
  Shopify.queryParams = {};
  if (location.search.length) {
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'), tagValue = location.search.substr(0).split('&'); i < aCouples.length; i++) {
      aKeyValue = aCouples[i].split('=');
      if (aKeyValue.length > 1) {
        Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
      }
    }
  }

  // Set up dropdown listeners.
  $(function() {
    $('#sort-by')
      .val('{{ collection.sort_by | default: collection.default_sort_by | escape }}')
      .bind('change', function() {
        Shopify.queryParams.sort_by = jQuery(this).val();
        Shopify.queryParams.page = 1;

        location.search = jQuery.param(Shopify.queryParams).replace(/\+/g, '%20');
      });
  })

  </script>

  {% include 'product-advertizing' %}

  <div class="grid-uniform collection-products">
    {% comment %} I set a count to count how many images we have in the linklist, then each time the loop of products get to preseted 6 product + 1 = 7, 11, 19, 23, 31,... we show an image if it is available {% endcomment %}

    {% capture menu %}{{collection.title | handleize }}-images-links{% endcapture %}

    {% assign page = paginate.current_page %}
    {% if page == 1 %}
      {% assign count_image = -1 %}
      {% assign count_image_mobile = -1 %}
    {% elsif page == 2 %}
      {% assign count_image = 4 %}
      {% assign count_image_mobile = 4 %}
    {% elsif page == 3 %}
      {% assign count_image = 9 %}
      {% assign count_image_mobile = 9 %}
    {% elsif page == 4 %}
      {% assign count_image = 14 %}
      {% assign count_image_mobile = 14 %}
    {% elsif page == 5 %}
      {% assign count_image = 19 %}
      {% assign count_image_mobile = 19 %}
    {% elsif page == 6 %}
      {% assign count_image = 24 %}
      {% assign count_image_mobile = 24 %}
    {% elsif page == 7 %}
      {% assign count_image = 29 %}
      {% assign count_image_mobile = 29 %}
    {% else %}
      {% assign count_image = 0 %}
      {% assign count_image_mobile = 0 %}
    {% endif %}



    {% for product in collection.products %}


    {% comment %} This is the logic for desktop {% endcomment %}

      {% if forloop.index == 7 or forloop.index == 11 or forloop.index == 19 or forloop.index == 23 or forloop.index == 31 or forloop.index == 35 or forloop.index == 43 or forloop.index == 47 or forloop.index == 55 or forloop.index == 59 or forloop.index == 67 or forloop.index == 71 or forloop.index == 79 or forloop.index == 83 or forloop.index == 91 or forloop.index == 95 or forloop.index == 103 or forloop.index == 107 or forloop.index == 115 or forloop.index == 119 or forloop.index == 127 or forloop.index == 131 or forloop.index == 139 or forloop.index == 143 or forloop.index == 151 or forloop.index == 155 or forloop.index == 163 or forloop.index == 167 or forloop.index == 175 or forloop.index == 179 or forloop.index == 187 or forloop.index == 191 or forloop.index == 199 or forloop.index == 203 or forloop.index == 211 %}

      {% assign count_image = count_image | plus: 1 %}
        {% if linklists[menu]links[count_image]url %}
      <div class="grid__item one-half large--two-quarters medium--one-quarter product-grid-item-container medium-down--hide" style="width:49%;" data-key="sameHeights" >
          <img title="{{count_image}}" src="{{linklists[menu]links[count_image]url}}">
      </div>
        {% endif %}
      {% endif %}
    {% comment %} End of logic for desktop {% endcomment %}

    {% comment %} This is the logic for mobile {% endcomment %}

     {% if forloop.index == 7 or forloop.index == 13 or forloop.index == 19 or forloop.index == 25 or forloop.index == 31 or forloop.index == 37 or forloop.index == 43 or forloop.index == 49 or forloop.index == 55 or forloop.index == 61 or forloop.index == 67 or forloop.index == 73 or forloop.index == 79 or forloop.index == 85 or forloop.index == 91 or forloop.index == 97 or forloop.index == 103 or forloop.index == 109 or forloop.index == 115 or forloop.index == 121 or forloop.index == 127 or forloop.index == 133 or forloop.index == 139 or forloop.index == 145 or forloop.index == 151 or forloop.index == 157 or forloop.index == 163 or forloop.index == 169 or forloop.index == 175 or forloop.index == 181 or forloop.index == 187 or forloop.index == 193 or forloop.index == 199 or forloop.index == 205 or forloop.index == 211 %}
      {% assign count_image_mobile = count_image_mobile | plus: 1 %}
        {% if linklists[menu]links[count_image_mobile]url %}
      <div class="grid__item one-whole large--two-quarters medium--one-quarter product-grid-item-container medium-down--show large--hide" style="margin:10px 0; width:99%;">
          <img title="{{count_image_mobile}} - {{modulo}}" src="{{linklists[menu]links[count_image_mobile]url}}">
      </div>
        {% endif %}
      {% endif %}
    {% comment %} End of logic for mobile {% endcomment %}



      <div class="grid__item grid_collection_item one-half large--one-quarter medium--one-quarter product-grid-item-container"
           id = {{ product.id }}
           data-xs={{ product.variants[0].inventory_quantity }}
           data-s={{ product.variants[1].inventory_quantity }}
           data-m={{ product.variants[2].inventory_quantity }}
           data-l={{ product.variants[3].inventory_quantity }}
           data-key="sameHeights"
      >

        {% include 'product-grid-item' %}
      </div>
    {% else %}
      {% if collection.handle == 'all' and current_tags == '' %}
      {% else %}
        {% comment %}
          If collection exists but is empty, display message
        {% endcomment %}
        <div class="grid__item">
          <p style="font-size: 20px;text-align: center">{{ 'collections.general.no_matches' | t }}</p>
        </div>
      {% endif %}
    {% endfor %}

    <div id="product-list-foot"></div>
    {% if paginate.next %}
      <div id="more"><p><a href="{{ paginate.next.url }}"></a></p></div>
      <div id="loading-img" style="text-align:center;display:none;"><img src="{{ "loading.svg" | asset_url }}" style="width:90px;"/></div>
    {% endif %}

  </div>
  {% endpaginate %}

  <script>
    // Restore last place on page
    $(function() {
      $('.grid__image').click(function() {
        Cookies.set('scrollTop', $(window).scrollTop(), {
          expires: 1,
          path: '',
        });
      });

      var scrollTop = +Cookies.get('scrollTop');
      if (!scrollTop) return;
      setScrollTop(scrollTop);

      function setScrollTop(scrollTop) {
        var $body = $(document.body);
        if ($body.height() < scrollTop) {
          // Body isn't tall enought yet. Try again in 100ms.
          setTimeout(function() {
            setScrollTop(scrollTop);
          }, 100);
          return;
        }
        $(window).scrollTop(scrollTop);
        Cookies.remove('scrollTop', { path: '' });
      }
    });
  </script>

  <script type="text/javascript">
    function sameHeights(selector) {
        var selector = selector || '[data-key="sameHeights"]',
            query = document.querySelectorAll(selector),
            elements = query.length,
            max = 0;
        if (elements) {
            while (elements--) {
                var element = query[elements];
                if (element.clientHeight > max) {
                    max = element.clientHeight;
                }
            }
            elements = query.length;
            while (elements--) {
                var element = query[elements];
                element.style.height = max + 'px';
            }
        }
    }
  </script>
  <script type="text/javascript">
    if ('addEventListener' in window) {
        window.addEventListener('resize', function(){
            sameHeights();
        });
        window.addEventListener('load', function(){
            sameHeights();
        });
    }
  </script>
  <script>
     function insertParam(key, value) {
     key = encodeURI(key); value = encodeURI(value);

     var kvp = document.location.search.substr(1).split('&');
     var found = false;

     var i=kvp.length; var x; while(i--)
     {
         x = kvp[i].split('=');

           if (x[0]=="page")
         {
             x[1] = 1;
             kvp[i] = x.join('=');
         }
         else if (x[0]==key)
         {
             x[1] = value;
             kvp[i] = x.join('=');
             found = true;
         }
     }

     if(!found) {kvp[kvp.length] = [key,value].join('=');}

     //this will reload the page, it's likely better to store this until finished
     return kvp.join('&');
   }
    /* Product Tag Filters - Good for any number of filters on any type of collection pages */
    var collFilters = jQuery('.coll-filter');
    collFilters.change(function() {
      var newTags = [];
      collFilters.each(function() {
        if (jQuery(this).val()) {
          newTags.push(jQuery(this).val());
        }
      });
      if (newTags.length) {
        var query = newTags.join('+');
        var url = jQuery('{{ 'tag' | link_to_tag: 'tag' }}').attr('href').replace('tag', query);
        url = url.split('?')[0] + '?' + insertParam("filter-by-size", jQuery(this).val());
        window.location.href = url;
      }
      else {
        {% if collection.handle %}
        window.location.href = '/collections/{{ collection.handle }}';
        {% elsif collection.products.first.type == collection.title %}
        window.location.href = '{{ collection.title | url_for_type }}';
        {% elsif collection.products.first.vendor == collection.title %}
        window.location.href = '{{ collection.title | url_for_vendor }}';
        {% endif %}
      }
    });

  var getFilterSize = function() {
      var found = "";
      window.location.pathname.split("/").forEach(function(item) {
          if (item.indexOf("ccf-size") >=  0) {
              found = item;
          }
      });
      return found;
  };

   $(function() {
    var tagValue = getFilterSize();
    $('#filter-by-size').val(tagValue);
  })

  </script>

  {% if template contains 'collection' %}
    <script>
 function ScrollExecute() {
      if($(document).height() - 800 < ($(document).scrollTop() + $(window).height())) {
        scrollNode = $('#more').last();
        scrollURL = $('#more p a').last().attr("href");
        if(scrollNode.length > 0 && scrollNode.html().length> 0) {
          $.ajax({
            type: 'GET',
            url: scrollURL,
            beforeSend: function() {
              scrollNode.empty();
              $('#loading-img').show();
            },
            success: function(data) {
              var newLink = $(data).find("#more").html() || "";
              $('#more').html( newLink );
              var filteredData = $(data).find(".product-grid-item-container");
              $(filteredData).find(".featured-image").each(function(idx,img){
                $(img).attr("src",$(img).data('original'));
              });

              filteredData.insertBefore( $("#product-list-foot") );
              $('#loading-img').hide();
            },
            complete: function() {
              var container = $('#rw-modal-container');
//         addStartRating();
            },
            dataType: "html"
          });
        }
      }
    }

    $(document).ready(function () {
      $(window).scroll(function(){
        $.doTimeout( 'scroll', 200, ScrollExecute);
      });
//       addStartRating();
    });

     function addStartRating(){
        var bodynamesRatings = localStorageHandler.get('bodynames-ratings');
        if (!bodynamesRatings || !bodynamesRatings.length) {
          var container = $('#rw-modal-container');
            var shop = container.data('shop');
            var url = container.data('app');
            url += 'get-bodynames-rating?shop=' + shop;

            $.ajax({
              url: url,
              async: true,
              success: function(data) {
                bodynamesRatings = localStorageHandler.save('bodynames-ratings', data, 120) || JSON.parse(data);
                loadRatingViews(bodynamesRatings);
              }
            });
        } else {
          loadRatingViews(bodynamesRatings);
        }

    }

    function loadRatingViews(bodynamesRatings){
        bodynamesRatings = JSON.parse(bodynamesRatings);
      bodynamesRatings.forEach(function(obj){
          var bodyName = obj.bodyName;
          var rating = obj.rating % parseInt(obj.rating) > 0 ? (parseInt(obj.rating) + " half") : obj.rating;

          $('.rating-content[data-bodyname="' + bodyName.trim().replace(/\'/g,"") + '"]').each(function(){
              $(this).find('.star-rating').removeClass('star-0').addClass('star-'+rating);
          });
        });
    }

    var localStorageHandler = {
      save : function(key, jsonData, expirationMin){
          if (typeof (Storage) == "undefined") { return false; }
          var expirationMS = expirationMin * 60 * 1000;
          var record = {value: jsonData, timestamp: new Date().getTime() + expirationMS}
          localStorage.setItem(key, JSON.stringify(record));
          return jsonData;
      },
      get : function(key) {
        if (typeof (Storage) == "undefined") { return false; }
        var record = JSON.parse(localStorage.getItem(key));
    if (!record){return false;}
        if (new Date().getTime() > record.timestamp) {
          //Delete on expire
            localStorage.removeItem(key);
            return false;
        } else {
          return record.value;
        }
      }
    }
    </script>

  {% endif %}
